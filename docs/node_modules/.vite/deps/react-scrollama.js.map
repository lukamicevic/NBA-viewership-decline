{
  "version": 3,
  "sources": ["../../react-scrollama/src/utils.js", "../../react-scrollama/src/DebugOffset.jsx", "../../react-scrollama/src/Scrollama.jsx", "../../react-scrollama/node_modules/react-intersection-observer/dist/index.mjs", "../../react-scrollama/src/Step.jsx"],
  "sourcesContent": ["export const isOffsetInPixels = offset =>\n  typeof offset === 'string' && offset.includes('px');\n", "import React from 'react';\nimport { isOffsetInPixels } from './utils';\n\nconst markerStyles = {\n  position: 'fixed',\n  left: 0,\n  width: '100%',\n  height: 0,\n  borderTop: '2px dashed black',\n  zIndex: 9999,\n};\nconst offsetTextStyles = {\n  fontSize: '12px',\n  fontFamily: 'monospace',\n  margin: 0,\n  padding: 6,\n};\n\nconst useTop = offset => {\n  const offsetInPixels = isOffsetInPixels(offset);\n  if (offsetInPixels) {\n    return offset;\n  } else {\n    return `${offset * 100}%`;\n  }\n};\n\nconst DebugOffset = ({ offset }) => {\n  const top = useTop(offset);\n  return (\n    <div style={{ ...markerStyles, top }}>\n      <p style={offsetTextStyles}>trigger: {offset}</p>\n    </div>\n  );\n};\n\nexport default DebugOffset;\n", "import React, { useMemo, useEffect, useState } from 'react';\nimport DebugOffset from './DebugOffset.jsx';\nimport { isOffsetInPixels } from './utils';\n\nconst createThreshold = (theta, height) => {\n  const count = Math.ceil(height / theta);\n  const t = [];\n  const ratio = 1 / count;\n  for (let i = 0; i <= count; i += 1) {\n    t.push(i * ratio);\n  }\n  return t;\n};\n\nconst Scrollama = props => {\n  const {\n    debug,\n    children,\n    offset = 0.3,\n    onStepEnter = () => {},\n    onStepExit = () => {},\n    onStepProgress = null,\n    threshold = 4,\n  } = props;\n  const isOffsetDefinedInPixels = isOffsetInPixels(offset);\n  const [lastScrollTop, setLastScrollTop] = useState(0);\n  const [windowInnerHeight, setWindowInnerHeight] = useState(null);\n\n  const handleSetLastScrollTop = scrollTop => {\n    setLastScrollTop(scrollTop);\n  };\n\n  const handleWindowResize = e => {\n    setWindowInnerHeight(window.innerHeight);\n  };\n\n  useEffect(() => {\n    if (isOffsetDefinedInPixels) {\n      window.addEventListener('resize', handleWindowResize);\n      return () => {\n        window.removeEventListener('resize', handleWindowResize);\n      };\n    }\n  }, []);\n\n  const isBrowser = typeof window !== 'undefined';\n  const innerHeight = isBrowser ? windowInnerHeight || window.innerHeight : 0;\n\n  const offsetValue = isOffsetDefinedInPixels\n    ? +offset.replace('px', '') / innerHeight\n    : offset;\n\n  const progressThreshold = useMemo(\n    () => createThreshold(threshold, innerHeight),\n    [innerHeight],\n  );\n\n  return (\n    <>\n      {debug && <DebugOffset offset={offset} />}\n      {React.Children.map(children, (child, i) => {\n        return React.cloneElement(child, {\n          scrollamaId: `react-scrollama-${i}`,\n          offset: offsetValue,\n          onStepEnter,\n          onStepExit,\n          onStepProgress,\n          lastScrollTop,\n          handleSetLastScrollTop,\n          progressThreshold,\n          innerHeight,\n        });\n      })}\n    </>\n  );\n};\n\nexport default Scrollama;\n", "\"use client\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n// src/InView.tsx\nimport * as React from \"react\";\n\n// src/observe.ts\nvar observerMap = /* @__PURE__ */ new Map();\nvar RootIds = /* @__PURE__ */ new WeakMap();\nvar rootId = 0;\nvar unsupportedValue = void 0;\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\nfunction getRootId(root) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(\n    (key) => options[key] !== void 0\n  ).map((key) => {\n    return `${key}_${key === \"root\" ? getRootId(options.root) : options[key]}`;\n  }).toString();\n}\nfunction createObserver(options) {\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n  if (!instance) {\n    const elements = /* @__PURE__ */ new Map();\n    let thresholds;\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        var _a;\n        const inView = entry.isIntersecting && thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          entry.isVisible = inView;\n        }\n        (_a = elements.get(entry.target)) == null ? void 0 : _a.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id,\n      observer,\n      elements\n    };\n    observerMap.set(id, instance);\n  }\n  return instance;\n}\nfunction observe(element, callback, options = {}, fallbackInView = unsupportedValue) {\n  if (typeof window.IntersectionObserver === \"undefined\" && fallbackInView !== void 0) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return () => {\n    };\n  }\n  const { id, observer, elements } = createObserver(options);\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    callbacks.splice(callbacks.indexOf(callback), 1);\n    if (callbacks.length === 0) {\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n    if (elements.size === 0) {\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n\n// src/InView.tsx\nfunction isPlainChildren(props) {\n  return typeof props.children !== \"function\";\n}\nvar InView = class extends React.Component {\n  constructor(props) {\n    super(props);\n    __publicField(this, \"node\", null);\n    __publicField(this, \"_unobserveCb\", null);\n    __publicField(this, \"handleNode\", (node) => {\n      if (this.node) {\n        this.unobserve();\n        if (!node && !this.props.triggerOnce && !this.props.skip) {\n          this.setState({ inView: !!this.props.initialInView, entry: void 0 });\n        }\n      }\n      this.node = node ? node : null;\n      this.observeNode();\n    });\n    __publicField(this, \"handleChange\", (inView, entry) => {\n      if (inView && this.props.triggerOnce) {\n        this.unobserve();\n      }\n      if (!isPlainChildren(this.props)) {\n        this.setState({ inView, entry });\n      }\n      if (this.props.onChange) {\n        this.props.onChange(inView, entry);\n      }\n    });\n    this.state = {\n      inView: !!props.initialInView,\n      entry: void 0\n    };\n  }\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n  componentWillUnmount() {\n    this.unobserve();\n  }\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView\n    } = this.props;\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay\n      },\n      fallbackInView\n    );\n  }\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children\n    );\n  }\n};\n\n// src/useInView.tsx\nimport * as React2 from \"react\";\nfunction useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange\n} = {}) {\n  var _a;\n  const [ref, setRef] = React2.useState(null);\n  const callback = React2.useRef(onChange);\n  const [state, setState] = React2.useState({\n    inView: !!initialInView,\n    entry: void 0\n  });\n  callback.current = onChange;\n  React2.useEffect(\n    () => {\n      if (skip || !ref) return;\n      let unobserve;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry\n          });\n          if (callback.current) callback.current(inView, entry);\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            unobserve();\n            unobserve = void 0;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay\n        },\n        fallbackInView\n      );\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay\n    ]\n  );\n  const entryTarget = (_a = state.entry) == null ? void 0 : _a.target;\n  const previousEntryTarget = React2.useRef(void 0);\n  if (!ref && entryTarget && !triggerOnce && !skip && previousEntryTarget.current !== entryTarget) {\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: void 0\n    });\n  }\n  const result = [setRef, state.inView, state.entry];\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\nexport {\n  InView,\n  defaultFallbackInView,\n  observe,\n  useInView\n};\n//# sourceMappingURL=index.mjs.map", "// prettier-ignore\nimport React, { useState, useMemo, useCallback, useRef, useEffect, cloneElement } from 'react';\nimport { useInView } from 'react-intersection-observer';\n\nconst useRootMargin = offset => {\n  return `-${offset * 100}% 0px -${100 - offset * 100}% 0px`;\n};\n\nconst useProgressRootMargin = (direction, offset, node, innerHeight) => {\n  if (!node.current) return '0px';\n  const offsetHeight = node.current.offsetHeight / innerHeight;\n  if (direction === 'down')\n    return `${(offsetHeight - offset) * 100}% 0px ${offset * 100 - 100}% 0px`;\n  return `-${offset * 100}% 0px ${offsetHeight * 100 - (100 - offset * 100)}% 0px`;\n};\n\nconst Step = props => {\n  const {\n    children,\n    data,\n    handleSetLastScrollTop,\n    lastScrollTop,\n    onStepEnter = () => {},\n    onStepExit = () => {},\n    onStepProgress = null,\n    offset,\n    scrollamaId,\n    progressThreshold,\n    innerHeight,\n  } = props;\n\n  const isBrowser = typeof window !== 'undefined';\n  const scrollTop = isBrowser ? document.documentElement.scrollTop : 0;\n  const direction = lastScrollTop > scrollTop ? 'up' : 'down';\n\n  const rootMargin = useRootMargin(offset);\n\n  const ref = useRef(null);\n  const [isIntersecting, setIsIntersecting] = useState(false);\n\n  const { ref: inViewRef, entry } = useInView({\n    rootMargin,\n    threshold: 0,\n  });\n\n  const progressRootMargin = useMemo(\n    () => useProgressRootMargin(direction, offset, ref, innerHeight),\n    [direction, offset, ref, innerHeight],\n  );\n\n  const { ref: scrollProgressRef, entry: scrollProgressEntry } = useInView({\n    rootMargin: progressRootMargin,\n    threshold: progressThreshold,\n  });\n\n  const setRefs = useCallback(\n    node => {\n      ref.current = node;\n      inViewRef(node);\n      scrollProgressRef(node);\n    },\n    [inViewRef, scrollProgressRef],\n  );\n\n  useEffect(() => {\n    if (isIntersecting) {\n      const { height, top } =\n        scrollProgressEntry.target.getBoundingClientRect();\n      const progress = Math.min(\n        1,\n        Math.max(0, (window.innerHeight * offset - top) / height),\n      );\n      onStepProgress &&\n        onStepProgress({\n          progress,\n          scrollamaId,\n          data,\n          element: scrollProgressEntry.target,\n          entry: scrollProgressEntry,\n          direction,\n        });\n    }\n  }, [scrollProgressEntry]);\n\n  useEffect(() => {\n    if (entry && !entry.isIntersecting && isIntersecting) {\n      onStepExit({\n        element: entry.target,\n        scrollamaId,\n        data,\n        entry,\n        direction,\n      });\n      setIsIntersecting(false);\n      handleSetLastScrollTop(scrollTop);\n    } else if (entry && entry.isIntersecting && !isIntersecting) {\n      setIsIntersecting(true);\n      onStepEnter({\n        element: entry.target,\n        scrollamaId,\n        data,\n        entry,\n        direction,\n      });\n      handleSetLastScrollTop(scrollTop);\n    }\n  }, [entry]);\n\n  return cloneElement(React.Children.only(children), {\n    'data-react-scrollama-id': scrollamaId,\n    ref: setRefs,\n    entry,\n  });\n};\n\nexport default Step;\n"],
  "mappings": "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",
  "names": ["isOffsetInPixels", "offset", "includes", "markerStyles", "position", "left", "width", "height", "borderTop", "zIndex", "offsetTextStyles", "fontSize", "fontFamily", "margin", "padding", "useTop", "offsetInPixels", "concat", "DebugOffset", "_ref", "top", "React", "createElement", "style", "_objectSpread", "createThreshold", "theta", "count", "Math", "ceil", "t", "ratio", "i", "push", "Scrollama", "props", "debug", "children", "_props$offset", "_props$onStepEnter", "onStepEnter", "_props$onStepExit", "onStepExit", "_props$onStepProgress", "onStepProgress", "_props$threshold", "threshold", "isOffsetDefinedInPixels", "_useState", "useState", "_useState2", "_slicedToArray", "lastScrollTop", "setLastScrollTop", "_useState3", "_useState4", "windowInnerHeight", "setWindowInnerHeight", "handleSetLastScrollTop", "scrollTop", "handleWindowResize", "e", "window", "innerHeight", "useEffect", "addEventListener", "removeEventListener", "isBrowser", "offsetValue", "replace", "progressThreshold", "useMemo", "Fragment", "Children", "map", "child", "cloneElement", "scrollamaId", "React2", "useRootMargin", "useProgressRootMargin", "direction", "node", "current", "offsetHeight", "Step", "data", "document", "documentElement", "rootMargin", "ref", "useRef", "isIntersecting", "setIsIntersecting", "_useInView", "useInView", "inViewRef", "entry", "progressRootMargin", "_useInView2", "scrollProgressRef", "scrollProgressEntry", "setRefs", "useCallback", "_scrollProgressEntry$", "target", "getBoundingClientRect", "progress", "min", "max", "element", "only"]
}
